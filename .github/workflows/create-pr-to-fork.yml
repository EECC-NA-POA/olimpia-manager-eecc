
name: Create PR to Fork Repository

on:
  pull_request:
    types: [closed]
    branches: [release]
  workflow_dispatch:

jobs:
  create-pr-to-fork:
    runs-on: ubuntu-latest
    # Only run when PR was merged (not just closed) and came from main branch
    if: github.event.pull_request.merged == true && github.event.pull_request.head.ref == 'main'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: release
          fetch-depth: 0
          token: ${{ secrets.FORK_REPO_TOKEN }}

      - name: Configure Git
        run: |
          git config --global user.name "GitHub Action"
          git config --global user.email "action@github.com"

      - name: Add fork remote and fetch
        run: |
          echo "Adding fork remote..."
          git remote add fork https://${{ secrets.FORK_REPO_TOKEN }}@github.com/EECC-NA-POA/olimpia-manager-eecc.git
          git fetch fork
          echo "Remotes configured:"
          git remote -v

      - name: Create and push branch to fork
        run: |
          # Create a unique branch name with timestamp
          BRANCH_NAME="sync-from-release-$(date +%Y%m%d-%H%M%S)"
          echo "Creating branch: $BRANCH_NAME"
          
          # Create new branch based on current release (which now contains merged changes from main)
          git checkout -b $BRANCH_NAME
          
          # Push to fork
          echo "Pushing branch to fork..."
          git push fork $BRANCH_NAME
          
          # Save branch name for next step
          echo "BRANCH_NAME=$BRANCH_NAME" >> $GITHUB_ENV

      - name: Create Pull Request
        env:
          GH_TOKEN: ${{ secrets.FORK_REPO_TOKEN }}
        run: |
          echo "Creating PR from $BRANCH_NAME to main in fork repository..."
          
          # Get merged PR info for better description
          PR_NUMBER="${{ github.event.pull_request.number }}"
          PR_TITLE="${{ github.event.pull_request.title }}"
          PR_AUTHOR="${{ github.event.pull_request.user.login }}"
          MERGE_COMMIT="${{ github.event.pull_request.merge_commit_sha }}"
          
          # Create PR body
          PR_BODY="## SincronizaÃ§Ã£o automÃ¡tica do repositÃ³rio privado
          
          **PR Original:** #$PR_NUMBER - $PR_TITLE
          **Autor:** @$PR_AUTHOR
          **Merge Commit:** \`$MERGE_COMMIT\`
          
          Este PR foi criado automaticamente apÃ³s o merge do PR #$PR_NUMBER da branch \`main\` para \`release\` no repositÃ³rio privado.
          
          **RepositÃ³rio origem:** bonanza-ong/olimpia-manager-na
          **Fluxo:** main â†’ release (repo privado) â†’ main (repo pÃºblico)
          **Branch temporÃ¡ria:** $BRANCH_NAME"
          
          # Try to create the PR
          gh pr create \
            --repo EECC-NA-POA/olimpia-manager-eecc \
            --base main \
            --head $BRANCH_NAME \
            --title "ðŸ”„ SincronizaÃ§Ã£o: $PR_TITLE" \
            --body "$PR_BODY" || {
              echo "Failed to create PR. Checking if it already exists..."
              
              # Check if a PR already exists for this branch
              existing_pr=$(gh pr list --repo EECC-NA-POA/olimpia-manager-eecc --head $BRANCH_NAME --json number --jq '.[0].number' 2>/dev/null || echo "")
              
              if [ -n "$existing_pr" ] && [ "$existing_pr" != "null" ]; then
                echo "PR already exists: #$existing_pr"
                echo "Updating existing PR..."
                gh pr edit $existing_pr --repo EECC-NA-POA/olimpia-manager-eecc --body "$PR_BODY"
              else
                echo "Error creating PR and no existing PR found"
                exit 1
              fi
            }

      - name: Clean up
        if: always()
        run: |
          echo "Cleaning up..."
          # Remove the fork remote
          git remote remove fork || true
          echo "Cleanup completed"

      - name: Success notification
        run: |
          echo "âœ… Workflow completed successfully!"
          echo "A Pull Request has been created (or updated) in the fork repository."
          echo "Repository: EECC-NA-POA/olimpia-manager-eecc"
          echo "Target branch: main"
          echo "Triggered by merge of PR #${{ github.event.pull_request.number }}"
